services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.0
#    container_name: zookeeper
#    hostname: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    networks:
#      - broker-kafka

  kafka:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - broker-kafka

  #UI erreichbar unter http://localhost:8080
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:19092"
    ports:
      - 8080:8080
    links:
      - kafka
    networks:
      - broker-kafka
#  kafdrop:
#    image: obsidiandynamics/kafdrop:3.27.0
#    depends_on:
#      - kafka
#      - zookeeper
#    ports:
#      - 19000:9000
#    environment:
#      KAFKA_BROKERCONNECT: kafka:29092
#    networks:
#      - broker-kafka

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
#    environment:
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#    ports:
#      - "9200:9200"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#    networks:
#      - broker-kafka

#  publisher:
#    build: ./fetcher_service
#    depends_on:
#      - kafka
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - broker-kafka
#    environment:
#      KAFKA_BROKER: "kafka:9092"
#
#  consumer:
#    build: ./processor_service
#    depends_on:
#      - kafka
#      - publisher
##      - elasticsearch
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - broker-kafka
#    environment:
#      KAFKA_BROKER: "kafka:9092"

networks:
  broker-kafka:
    driver: bridge

#volumes:
#  esdata:
#    driver: local
