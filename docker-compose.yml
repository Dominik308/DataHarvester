services:
  kafka:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - broker-kafka

  # Reach UI under: http://localhost:8080
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:19092"
    ports:
      - 8080:8080
    links:
      - kafka
    networks:
      - broker-kafka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    hostname: data-preparer
    container_name: data-preparer
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#      - ELASTIC_USERNAME=elastic
#      - ELASTIC_PASSWORD=MagicWord
#      - xpack.security.enabled=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data # For saving data outside, e.g. in a database
    networks:
      - broker-kafka

  kibana:
    hostname: kibana
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.14.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - broker-kafka

  publisher:
    build: ./fetcher_service
    depends_on:
      - kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - broker-kafka
    environment:
      KAFKA_BROKER: "kafka:9092"
      STONKS: "AAPL,MSFT"

  consumer:
    build: ./processor_service
    depends_on:
      - kafka
      - publisher
      - elasticsearch
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - broker-kafka
    environment:
      KAFKA_BROKER: "kafka:9092"
      STONKS: "AAPL,MSFT"

networks:
  broker-kafka:
    driver: bridge

volumes:
  esdata:
    driver: local
